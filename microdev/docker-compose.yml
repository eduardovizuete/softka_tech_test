name: devmicro

services:
    mysqldb:
        container_name: mysqldb
        image: "mysql:8.0"
        volumes:
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./data:/var/lib/mysql
        ports:
            - "3306:3306"
        environment:
            TZ: America/Guayaquil
            MYSQL_DATABASE: microdev
            MYSQL_ROOT_PASSWORD: rootroot
            MYSQL_USER: devel_one
            MYSQL_PASSWORD: devel_one
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
            interval: 10s
            timeout: 20s
            retries: 10
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            TZ: America/Guayaquil
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "22181:2181"
    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        ports:
            - "9092:9092"
        depends_on:
            - zookeeper
        environment:
            TZ: America/Guayaquil
            KAFKA_BROKER_ID: 1
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    service-registry:
        container_name: service-registry
        build:
            context: service-registry
            dockerfile: Dockerfile
        image: service-registry:latest
        ports:
            - 8761:8761
        environment:
            SPRING_APPLICATION_JSON: '{
                    "eureka.instance.hostname":"service-registry"
                }'
    api-gateway:
        container_name: api-gateway
        build:
            context: api-gateway
            dockerfile: Dockerfile
        image: api-gateway:latest
        ports:
            - "9191:9191"
        env_file:
            - .env
        environment:
            SPRING_APPLICATION_JSON: '{
                    "eureka.client.serviceUrl.defaultZone":"${EUREKA_HOST}"
                }'
        depends_on:
            mysqldb:
                condition: service_healthy
            service-registry:
                condition: service_started
    micropc:
        container_name: micropc
        build:
            context: micro_person_client
            dockerfile: Dockerfile
        image: micro_person_client:latest
        ports:
            - "8080:8080"
        environment:
            SPRING_APPLICATION_JSON: '{
                    "spring.datasource.url":"jdbc:mysql://mysqldb:3306/microdev",
                    "eureka.client.serviceUrl.defaultZone":"${EUREKA_HOST}"
                }'
        depends_on:
            mysqldb:
                condition: service_healthy
            service-registry:
                condition: service_started
            kafka:
                condition: service_started
    microat:
        container_name: microat
        build:
            context: micro_account_tx
            dockerfile: Dockerfile
        image: micro_account_tx:latest
        ports:
            - "8081:8081"
        environment:
            SPRING_APPLICATION_JSON: '{
                    "spring.datasource.url":"jdbc:mysql://mysqldb:3306/microdev",
                    "eureka.client.serviceUrl.defaultZone":"${EUREKA_HOST}"
                }'
        depends_on:
            mysqldb:
                condition: service_healthy
            service-registry:
                condition: service_started
            kafka:
                condition: service_started
